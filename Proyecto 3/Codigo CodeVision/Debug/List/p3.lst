
AVRASM ver. 2.1.30  C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm Sun May 14 23:15:36 2023

C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1415): warning: Register r4 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1416): warning: Register r5 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1417): warning: Register r6 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1418): warning: Register r7 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1419): warning: Register r8 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1420): warning: Register r9 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1421): warning: Register r10 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1422): warning: Register r11 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1423): warning: Register r12 already defined by the .DEF directive
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1424): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 Evaluation
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8535
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 128 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 512
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0080
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x20
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _puntuacionj1=R4
                 	.DEF _puntuacionj1_msb=R5
                 	.DEF _puntuacionj2=R6
                 	.DEF _puntuacionj2_msb=R7
                 	.DEF _a1=R8
                 	.DEF _a1_msb=R9
                 	.DEF _b1=R10
                 	.DEF _b1_msb=R11
                 	.DEF _c1=R12
                 	.DEF _c1_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c025      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
                 
                 _tabla7segmentos:
000015 063f
000016 4f5b
000017 6d66
000018 077c      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7C,0x7
000019 6f7f      	.DB  0x7F,0x6F
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00001a 0000      	.DW  0x0000
                 
                 _0x3:
00001b 0001
00001c 0101
00001d 0101
C:\Users\braya\Downloads\Introduccion a los microcontroladores\Proyecto 3 V2\Codigo CodeVision\Debug\List\p3.asm(1464): warning: .cseg .db misalignment - padding zero byte
00001e 0001      	.DB  0x1,0x0,0x1,0x1,0x1,0x1,0x1
                 
                 __GLOBAL_INI_TBL:
00001f 0001      	.DW  0x01
000020 0002      	.DW  0x02
000021 0034      	.DW  __REG_BIT_VARS*2
                 
000022 0007      	.DW  0x07
000023 00e0      	.DW  _filas
000024 0036      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
000025 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000026 94f8      	CLI
000027 27ee      	CLR  R30
000028 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000029 e0f1      	LDI  R31,1
00002a bffb      	OUT  GICR,R31
00002b bfeb      	OUT  GICR,R30
00002c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00002d e08d      	LDI  R24,(14-2)+1
00002e e0a2      	LDI  R26,2
00002f 27bb      	CLR  R27
                 __CLEAR_REG:
000030 93ed      	ST   X+,R30
000031 958a      	DEC  R24
000032 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000033 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000034 e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000035 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000036 93ed      	ST   X+,R30
000037 9701      	SBIW R24,1
000038 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000039 e3ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00003a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00003b 9185      	LPM  R24,Z+
00003c 9195      	LPM  R25,Z+
00003d 9700      	SBIW R24,0
00003e f061      	BREQ __GLOBAL_INI_END
00003f 91a5      	LPM  R26,Z+
000040 91b5      	LPM  R27,Z+
000041 9005      	LPM  R0,Z+
000042 9015      	LPM  R1,Z+
000043 01bf      	MOVW R22,R30
000044 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000045 9005      	LPM  R0,Z+
000046 920d      	ST   X+,R0
000047 9701      	SBIW R24,1
000048 f7e1      	BRNE __GLOBAL_INI_LOOP
000049 01fb      	MOVW R30,R22
00004a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00004b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00004c bfed      	OUT  SPL,R30
00004d e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00004e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00004f eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000050 e0d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000051 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.DSEG
                 ;void muevej1der();
                 ;void muevej1izq();
                 ;void muevej2der();
                 ;void muevej2izq();
                 ;void muevepunto();
                 ;void main(void)
                 ; 0000 0053 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0054 // Declare your local variables here
                 ; 0000 0055 
                 ; 0000 0056 // Input/Output Ports initialization
                 ; 0000 0057 // Port A initialization
                 ; 0000 0058 // Function: Bit7=In Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0059 DDRA=(0<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
000052 e7ef      	LDI  R30,LOW(127)
000053 bbea      	OUT  0x1A,R30
                 ; 0000 005A // State: Bit7=T Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 005B PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000054 e0e0      	LDI  R30,LOW(0)
000055 bbeb      	OUT  0x1B,R30
                 ; 0000 005C 
                 ; 0000 005D // Port B initialization
                 ; 0000 005E // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 005F DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000056 efe0      	LDI  R30,LOW(240)
000057 bbe7      	OUT  0x17,R30
                 ; 0000 0060 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=P Bit2=P Bit1=P Bit0=P
                 ; 0000 0061 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
000058 e0ef      	LDI  R30,LOW(15)
000059 bbe8      	OUT  0x18,R30
                 ; 0000 0062 
                 ; 0000 0063 // Port C initialization
                 ; 0000 0064 // Function: Bit7=In Bit6=In Bit5=In Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0065 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
00005a e1ef      	LDI  R30,LOW(31)
00005b bbe4      	OUT  0x14,R30
                 ; 0000 0066 // State: Bit7=T Bit6=T Bit5=T Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0067 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00005c e0e0      	LDI  R30,LOW(0)
00005d bbe5      	OUT  0x15,R30
                 ; 0000 0068 
                 ; 0000 0069 // Port D initialization
                 ; 0000 006A // Function: Bit7=In Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 006B DDRD=(0<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
00005e e7ef      	LDI  R30,LOW(127)
00005f bbe1      	OUT  0x11,R30
                 ; 0000 006C // State: Bit7=T Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 006D PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000060 e0e0      	LDI  R30,LOW(0)
000061 bbe2      	OUT  0x12,R30
                 ; 0000 006E 
                 ; 0000 006F // Timer/Counter 0 initialization
                 ; 0000 0070 // Clock source: System Clock
                 ; 0000 0071 // Clock value: Timer 0 Stopped
                 ; 0000 0072 // Mode: Normal top=0xFF
                 ; 0000 0073 // OC0 output: Disconnected
                 ; 0000 0074 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000062 bfe3      	OUT  0x33,R30
                 ; 0000 0075 TCNT0=0x00;
000063 bfe2      	OUT  0x32,R30
                 ; 0000 0076 OCR0=0x00;
000064 bfec      	OUT  0x3C,R30
                 ; 0000 0077 
                 ; 0000 0078 // Timer/Counter 1 initialization
                 ; 0000 0079 // Clock source: System Clock
                 ; 0000 007A // Clock value: Timer1 Stopped
                 ; 0000 007B // Mode: Normal top=0xFFFF
                 ; 0000 007C // OC1A output: Disconnected
                 ; 0000 007D // OC1B output: Disconnected
                 ; 0000 007E // Noise Canceler: Off
                 ; 0000 007F // Input Capture on Falling Edge
                 ; 0000 0080 // Timer1 Overflow Interrupt: Off
                 ; 0000 0081 // Input Capture Interrupt: Off
                 ; 0000 0082 // Compare A Match Interrupt: Off
                 ; 0000 0083 // Compare B Match Interrupt: Off
                 ; 0000 0084 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000065 bdef      	OUT  0x2F,R30
                 ; 0000 0085 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000066 bdee      	OUT  0x2E,R30
                 ; 0000 0086 TCNT1H=0x00;
000067 bded      	OUT  0x2D,R30
                 ; 0000 0087 TCNT1L=0x00;
000068 bdec      	OUT  0x2C,R30
                 ; 0000 0088 ICR1H=0x00;
000069 bde7      	OUT  0x27,R30
                 ; 0000 0089 ICR1L=0x00;
00006a bde6      	OUT  0x26,R30
                 ; 0000 008A OCR1AH=0x00;
00006b bdeb      	OUT  0x2B,R30
                 ; 0000 008B OCR1AL=0x00;
00006c bdea      	OUT  0x2A,R30
                 ; 0000 008C OCR1BH=0x00;
00006d bde9      	OUT  0x29,R30
                 ; 0000 008D OCR1BL=0x00;
00006e bde8      	OUT  0x28,R30
                 ; 0000 008E 
                 ; 0000 008F // Timer/Counter 2 initialization
                 ; 0000 0090 // Clock source: System Clock
                 ; 0000 0091 // Clock value: Timer2 Stopped
                 ; 0000 0092 // Mode: Normal top=0xFF
                 ; 0000 0093 // OC2 output: Disconnected
                 ; 0000 0094 ASSR=0<<AS2;
00006f bde2      	OUT  0x22,R30
                 ; 0000 0095 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000070 bde5      	OUT  0x25,R30
                 ; 0000 0096 TCNT2=0x00;
000071 bde4      	OUT  0x24,R30
                 ; 0000 0097 OCR2=0x00;
000072 bde3      	OUT  0x23,R30
                 ; 0000 0098 
                 ; 0000 0099 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 009A TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000073 bfe9      	OUT  0x39,R30
                 ; 0000 009B 
                 ; 0000 009C // External Interrupt(s) initialization
                 ; 0000 009D // INT0: Off
                 ; 0000 009E // INT1: Off
                 ; 0000 009F // INT2: Off
                 ; 0000 00A0 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000074 bfe5      	OUT  0x35,R30
                 ; 0000 00A1 MCUCSR=(0<<ISC2);
000075 bfe4      	OUT  0x34,R30
                 ; 0000 00A2 
                 ; 0000 00A3 // USART initialization
                 ; 0000 00A4 // USART disabled
                 ; 0000 00A5 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000076 b9ea      	OUT  0xA,R30
                 ; 0000 00A6 
                 ; 0000 00A7 // Analog Comparator initialization
                 ; 0000 00A8 // Analog Comparator: Off
                 ; 0000 00A9 // The Analog Comparator's positive input is
                 ; 0000 00AA // connected to the AIN0 pin
                 ; 0000 00AB // The Analog Comparator's negative input is
                 ; 0000 00AC // connected to the AIN1 pin
                 ; 0000 00AD ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000077 e8e0      	LDI  R30,LOW(128)
000078 b9e8      	OUT  0x8,R30
                 ; 0000 00AE SFIOR=(0<<ACME);
000079 e0e0      	LDI  R30,LOW(0)
00007a bfe0      	OUT  0x30,R30
                 ; 0000 00AF 
                 ; 0000 00B0 // ADC initialization
                 ; 0000 00B1 // ADC disabled
                 ; 0000 00B2 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00007b b9e6      	OUT  0x6,R30
                 ; 0000 00B3 
                 ; 0000 00B4 // SPI initialization
                 ; 0000 00B5 // SPI disabled
                 ; 0000 00B6 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00007c b9ed      	OUT  0xD,R30
                 ; 0000 00B7 
                 ; 0000 00B8 // TWI initialization
                 ; 0000 00B9 // TWI disabled
                 ; 0000 00BA TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00007d bfe6      	OUT  0x36,R30
                 ; 0000 00BB 
                 ; 0000 00BC //Inicialization vars
                 ; 0000 00BD puntuacionj1 = 0;
00007e 2444      	CLR  R4
00007f 2455      	CLR  R5
                 ; 0000 00BE puntuacionj2 = 0;
000080 2466      	CLR  R6
000081 2477      	CLR  R7
                 ; 0000 00BF 
                 ; 0000 00C0 //La raqueta del J1 inicia a la izquierda
                 ; 0000 00C1 a1 = 0;
000082 d28b      	RCALL SUBOPT_0x0
                 ; 0000 00C2 b1 = 0;
                 ; 0000 00C3 c1 = 1;
                 ; 0000 00C4 d1 = 1;
                 ; 0000 00C5 e1 = 1;
                 ; 0000 00C6 
                 ; 0000 00C7 //La raqueta del J2 inicia a la izquierda
                 ; 0000 00C8 a2 = 0;
000083 d29a      	RCALL SUBOPT_0x1
                 ; 0000 00C9 b2 = 0;
                 ; 0000 00CA c2 = 1;
                 ; 0000 00CB d2 = 1;
                 ; 0000 00CC e2 = 1;
                 ; 0000 00CD 
                 ; 0000 00CE xj1 = 1; //Solo se movera de 1 a 3
000084 d2b1      	RCALL SUBOPT_0x2
000085 d2b3      	RCALL SUBOPT_0x3
                 ; 0000 00CF xj2 = 1;
000086 d2b7      	RCALL SUBOPT_0x4
                 ; 0000 00D0 
                 ; 0000 00D1 j = 2; //Columna de inicio para la pelota
000087 e0e2      	LDI  R30,LOW(2)
000088 e0f0      	LDI  R31,HIGH(2)
000089 d2ba      	RCALL SUBOPT_0x5
                 ; 0000 00D2 i = 0; //fila de inicio
00008a e0e0      	LDI  R30,LOW(0)
00008b 93e0 00f9 	STS  _i,R30
00008d 93e0 00fa 	STS  _i+1,R30
                 ; 0000 00D3 
                 ; 0000 00D4 x = 0;
00008f 93e0 0101 	STS  _x,R30
000091 93e0 0102 	STS  _x+1,R30
                 ; 0000 00D5 
                 ; 0000 00D6 iterador = 0;
000093 d2b5      	RCALL SUBOPT_0x6
                 ; 0000 00D7 factori = 1;
000094 d2ba      	RCALL SUBOPT_0x7
                 ; 0000 00D8 factorj = 1;
000095 d2bf      	RCALL SUBOPT_0x8
                 ; 0000 00D9 
                 ; 0000 00DA 
                 ; 0000 00DB while (1)
                 _0x4:
                 ; 0000 00DC {
                 ; 0000 00DD // Place your code here
                 ; 0000 00DE muevepunto();//mueve el punto que representa la pelota
000096 d0fe      	RCALL _muevepunto
                 ; 0000 00DF for(iterador = 0; iterador <= 200; iterador++){
000097 d2b1      	RCALL SUBOPT_0x6
                 _0x8:
000098 91a0 0103 	LDS  R26,_iterador
00009a 91b0 0104 	LDS  R27,_iterador+1
00009c 3ca9      	CPI  R26,LOW(0xC9)
00009d e0e0      	LDI  R30,HIGH(0xC9)
00009e 07be      	CPC  R27,R30
00009f f444      	BRGE _0x9
                 ; 0000 00E0 //Funciones para mover las barras
                 ; 0000 00E1 muevej1der();
0000a0 d1a1      	RCALL _muevej1der
                 ; 0000 00E2 muevej1izq();
0000a1 d1d3      	RCALL _muevej1izq
                 ; 0000 00E3 muevej2der();
0000a2 d204      	RCALL _muevej2der
                 ; 0000 00E4 muevej2izq();
0000a3 d239      	RCALL _muevej2izq
                 ; 0000 00E5 }
0000a4 e0a3      	LDI  R26,LOW(_iterador)
0000a5 e0b1      	LDI  R27,HIGH(_iterador)
0000a6 d2b4      	RCALL SUBOPT_0x9
0000a7 cff0      	RJMP _0x8
                 _0x9:
                 ; 0000 00E6 
                 ; 0000 00E7 //Se activan los displays de cada jugador
                 ; 0000 00E8 activadorm1 = 0;
0000a8 98c4      	CBI  0x18,4
                 ; 0000 00E9 activadorm2 = 1;
0000a9 9ac5      	SBI  0x18,5
                 ; 0000 00EA PORTA = tabla7segmentos[puntuacionj1];
0000aa 01f2      	MOVW R30,R4
0000ab d2b5      	RCALL SUBOPT_0xA
                 ; 0000 00EB delay_ms(20);
0000ac e1a4      	LDI  R26,LOW(20)
0000ad d2b8      	RCALL SUBOPT_0xB
                 ; 0000 00EC activadorm1 = 1;
0000ae 9ac4      	SBI  0x18,4
                 ; 0000 00ED activadorm2 = 0;
0000af 98c5      	CBI  0x18,5
                 ; 0000 00EE delay_ms(20);
0000b0 e1a4      	LDI  R26,LOW(20)
0000b1 d2b4      	RCALL SUBOPT_0xB
                 ; 0000 00EF PORTA = tabla7segmentos[puntuacionj2];
0000b2 01f3      	MOVW R30,R6
0000b3 d2ad      	RCALL SUBOPT_0xA
                 ; 0000 00F0 
                 ; 0000 00F1 delay_ms(100);
0000b4 d2b3      	RCALL SUBOPT_0xC
                 ; 0000 00F2 
                 ; 0000 00F3 //Envia datos
                 ; 0000 00F4 PORTC = 0x01;
0000b5 e0e1      	LDI  R30,LOW(1)
0000b6 d2b3      	RCALL SUBOPT_0xD
                 ; 0000 00F5 PORTD = 0xFF;
                 ; 0000 00F6 
                 ; 0000 00F7 if(j == 1){
0000b7 9711      	SBIW R26,1
0000b8 f4d1      	BRNE _0x12
                 ; 0000 00F8 row2 = filas[1];
0000b9 d2b8      	RCALL SUBOPT_0xE
0000ba f411      	BRNE _0x13
0000bb 9891      	CBI  0x12,1
0000bc c001      	RJMP _0x14
                 _0x13:
0000bd 9a91      	SBI  0x12,1
                 _0x14:
                 ; 0000 00F9 row3 = filas[2];
0000be d2b7      	RCALL SUBOPT_0xF
0000bf f411      	BRNE _0x15
0000c0 9892      	CBI  0x12,2
0000c1 c001      	RJMP _0x16
                 _0x15:
0000c2 9a92      	SBI  0x12,2
                 _0x16:
                 ; 0000 00FA row4 = filas[3];
0000c3 d2b6      	RCALL SUBOPT_0x10
0000c4 f411      	BRNE _0x17
0000c5 9893      	CBI  0x12,3
0000c6 c001      	RJMP _0x18
                 _0x17:
0000c7 9a93      	SBI  0x12,3
                 _0x18:
                 ; 0000 00FB row5 = filas[4];
0000c8 d2b5      	RCALL SUBOPT_0x11
0000c9 f411      	BRNE _0x19
0000ca 9894      	CBI  0x12,4
0000cb c001      	RJMP _0x1A
                 _0x19:
0000cc 9a94      	SBI  0x12,4
                 _0x1A:
                 ; 0000 00FC row6 = filas[5];
0000cd d2b4      	RCALL SUBOPT_0x12
0000ce f411      	BRNE _0x1B
0000cf 9895      	CBI  0x12,5
0000d0 c001      	RJMP _0x1C
                 _0x1B:
0000d1 9a95      	SBI  0x12,5
                 _0x1C:
                 ; 0000 00FD delay_ms(200);
0000d2 d2b3      	RCALL SUBOPT_0x13
                 ; 0000 00FE }
                 ; 0000 00FF 
                 ; 0000 0100 row1 = a1;
                 _0x12:
0000d3 2de8      	MOV  R30,R8
0000d4 30e0      	CPI  R30,0
0000d5 f411      	BRNE _0x1D
0000d6 9890      	CBI  0x12,0
0000d7 c001      	RJMP _0x1E
                 _0x1D:
0000d8 9a90      	SBI  0x12,0
                 _0x1E:
                 ; 0000 0101 row7 = a2;
0000d9 91e0 00eb 	LDS  R30,_a2
0000db 30e0      	CPI  R30,0
0000dc f411      	BRNE _0x1F
0000dd 9896      	CBI  0x12,6
0000de c001      	RJMP _0x20
                 _0x1F:
0000df 9a96      	SBI  0x12,6
                 _0x20:
                 ; 0000 0102 delay_ms(100);
0000e0 d287      	RCALL SUBOPT_0xC
                 ; 0000 0103 PORTC = 0x02;
0000e1 e0e2      	LDI  R30,LOW(2)
0000e2 d287      	RCALL SUBOPT_0xD
                 ; 0000 0104 PORTD = 0xFF;
                 ; 0000 0105 
                 ; 0000 0106 if(j == 2){
0000e3 9712      	SBIW R26,2
0000e4 f4d1      	BRNE _0x21
                 ; 0000 0107 row2 = filas[1];
0000e5 d28c      	RCALL SUBOPT_0xE
0000e6 f411      	BRNE _0x22
0000e7 9891      	CBI  0x12,1
0000e8 c001      	RJMP _0x23
                 _0x22:
0000e9 9a91      	SBI  0x12,1
                 _0x23:
                 ; 0000 0108 row3 = filas[2];
0000ea d28b      	RCALL SUBOPT_0xF
0000eb f411      	BRNE _0x24
0000ec 9892      	CBI  0x12,2
0000ed c001      	RJMP _0x25
                 _0x24:
0000ee 9a92      	SBI  0x12,2
                 _0x25:
                 ; 0000 0109 row4 = filas[3];
0000ef d28a      	RCALL SUBOPT_0x10
0000f0 f411      	BRNE _0x26
0000f1 9893      	CBI  0x12,3
0000f2 c001      	RJMP _0x27
                 _0x26:
0000f3 9a93      	SBI  0x12,3
                 _0x27:
                 ; 0000 010A row5 = filas[4];
0000f4 d289      	RCALL SUBOPT_0x11
0000f5 f411      	BRNE _0x28
0000f6 9894      	CBI  0x12,4
0000f7 c001      	RJMP _0x29
                 _0x28:
0000f8 9a94      	SBI  0x12,4
                 _0x29:
                 ; 0000 010B row6 = filas[5];
0000f9 d288      	RCALL SUBOPT_0x12
0000fa f411      	BRNE _0x2A
0000fb 9895      	CBI  0x12,5
0000fc c001      	RJMP _0x2B
                 _0x2A:
0000fd 9a95      	SBI  0x12,5
                 _0x2B:
                 ; 0000 010C delay_ms(200);
0000fe d287      	RCALL SUBOPT_0x13
                 ; 0000 010D }
                 ; 0000 010E 
                 ; 0000 010F row1 = b1;
                 _0x21:
0000ff 2dea      	MOV  R30,R10
000100 30e0      	CPI  R30,0
000101 f411      	BRNE _0x2C
000102 9890      	CBI  0x12,0
000103 c001      	RJMP _0x2D
                 _0x2C:
000104 9a90      	SBI  0x12,0
                 _0x2D:
                 ; 0000 0110 row7 = b2;
000105 91e0 00ed 	LDS  R30,_b2
000107 30e0      	CPI  R30,0
000108 f411      	BRNE _0x2E
000109 9896      	CBI  0x12,6
00010a c001      	RJMP _0x2F
                 _0x2E:
00010b 9a96      	SBI  0x12,6
                 _0x2F:
                 ; 0000 0111 delay_ms(100);
00010c d25b      	RCALL SUBOPT_0xC
                 ; 0000 0112 PORTC = 0x04;
00010d e0e4      	LDI  R30,LOW(4)
00010e d25b      	RCALL SUBOPT_0xD
                 ; 0000 0113 PORTD = 0xFF;
                 ; 0000 0114 
                 ; 0000 0115 if(j == 3){
00010f 9713      	SBIW R26,3
000110 f4d1      	BRNE _0x30
                 ; 0000 0116 row2 = filas[1];
000111 d260      	RCALL SUBOPT_0xE
000112 f411      	BRNE _0x31
000113 9891      	CBI  0x12,1
000114 c001      	RJMP _0x32
                 _0x31:
000115 9a91      	SBI  0x12,1
                 _0x32:
                 ; 0000 0117 row3 = filas[2];
000116 d25f      	RCALL SUBOPT_0xF
000117 f411      	BRNE _0x33
000118 9892      	CBI  0x12,2
000119 c001      	RJMP _0x34
                 _0x33:
00011a 9a92      	SBI  0x12,2
                 _0x34:
                 ; 0000 0118 row4 = filas[3];
00011b d25e      	RCALL SUBOPT_0x10
00011c f411      	BRNE _0x35
00011d 9893      	CBI  0x12,3
00011e c001      	RJMP _0x36
                 _0x35:
00011f 9a93      	SBI  0x12,3
                 _0x36:
                 ; 0000 0119 row5 = filas[4];
000120 d25d      	RCALL SUBOPT_0x11
000121 f411      	BRNE _0x37
000122 9894      	CBI  0x12,4
000123 c001      	RJMP _0x38
                 _0x37:
000124 9a94      	SBI  0x12,4
                 _0x38:
                 ; 0000 011A row6 = filas[5];
000125 d25c      	RCALL SUBOPT_0x12
000126 f411      	BRNE _0x39
000127 9895      	CBI  0x12,5
000128 c001      	RJMP _0x3A
                 _0x39:
000129 9a95      	SBI  0x12,5
                 _0x3A:
                 ; 0000 011B delay_ms(200);
00012a d25b      	RCALL SUBOPT_0x13
                 ; 0000 011C }
                 ; 0000 011D 
                 ; 0000 011E row1 = c1;
                 _0x30:
00012b 2dec      	MOV  R30,R12
00012c 30e0      	CPI  R30,0
00012d f411      	BRNE _0x3B
00012e 9890      	CBI  0x12,0
00012f c001      	RJMP _0x3C
                 _0x3B:
000130 9a90      	SBI  0x12,0
                 _0x3C:
                 ; 0000 011F row7 = c2;
000131 91e0 00ef 	LDS  R30,_c2
000133 30e0      	CPI  R30,0
000134 f411      	BRNE _0x3D
000135 9896      	CBI  0x12,6
000136 c001      	RJMP _0x3E
                 _0x3D:
000137 9a96      	SBI  0x12,6
                 _0x3E:
                 ; 0000 0120 delay_ms(100);
000138 d22f      	RCALL SUBOPT_0xC
                 ; 0000 0121 PORTC = 0x08;
000139 e0e8      	LDI  R30,LOW(8)
00013a d22f      	RCALL SUBOPT_0xD
                 ; 0000 0122 PORTD = 0xFF;
                 ; 0000 0123 
                 ; 0000 0124 if(j == 4){
00013b 9714      	SBIW R26,4
00013c f4d1      	BRNE _0x3F
                 ; 0000 0125 row2 = filas[1];
00013d d234      	RCALL SUBOPT_0xE
00013e f411      	BRNE _0x40
00013f 9891      	CBI  0x12,1
000140 c001      	RJMP _0x41
                 _0x40:
000141 9a91      	SBI  0x12,1
                 _0x41:
                 ; 0000 0126 row3 = filas[2];
000142 d233      	RCALL SUBOPT_0xF
000143 f411      	BRNE _0x42
000144 9892      	CBI  0x12,2
000145 c001      	RJMP _0x43
                 _0x42:
000146 9a92      	SBI  0x12,2
                 _0x43:
                 ; 0000 0127 row4 = filas[3];
000147 d232      	RCALL SUBOPT_0x10
000148 f411      	BRNE _0x44
000149 9893      	CBI  0x12,3
00014a c001      	RJMP _0x45
                 _0x44:
00014b 9a93      	SBI  0x12,3
                 _0x45:
                 ; 0000 0128 row5 = filas[4];
00014c d231      	RCALL SUBOPT_0x11
00014d f411      	BRNE _0x46
00014e 9894      	CBI  0x12,4
00014f c001      	RJMP _0x47
                 _0x46:
000150 9a94      	SBI  0x12,4
                 _0x47:
                 ; 0000 0129 row6 = filas[5];
000151 d230      	RCALL SUBOPT_0x12
000152 f411      	BRNE _0x48
000153 9895      	CBI  0x12,5
000154 c001      	RJMP _0x49
                 _0x48:
000155 9a95      	SBI  0x12,5
                 _0x49:
                 ; 0000 012A delay_ms(200);
000156 d22f      	RCALL SUBOPT_0x13
                 ; 0000 012B }
                 ; 0000 012C 
                 ; 0000 012D row1 = d1;
                 _0x3F:
000157 91e0 00e7 	LDS  R30,_d1
000159 30e0      	CPI  R30,0
00015a f411      	BRNE _0x4A
00015b 9890      	CBI  0x12,0
00015c c001      	RJMP _0x4B
                 _0x4A:
00015d 9a90      	SBI  0x12,0
                 _0x4B:
                 ; 0000 012E row7 = d2;
00015e 91e0 00f1 	LDS  R30,_d2
000160 30e0      	CPI  R30,0
000161 f411      	BRNE _0x4C
000162 9896      	CBI  0x12,6
000163 c001      	RJMP _0x4D
                 _0x4C:
000164 9a96      	SBI  0x12,6
                 _0x4D:
                 ; 0000 012F delay_ms(100);
000165 d202      	RCALL SUBOPT_0xC
                 ; 0000 0130 PORTC = 0x10;
000166 e1e0      	LDI  R30,LOW(16)
000167 d202      	RCALL SUBOPT_0xD
                 ; 0000 0131 PORTD = 0xFF;
                 ; 0000 0132 
                 ; 0000 0133 if(j == 5){
000168 9715      	SBIW R26,5
000169 f4d1      	BRNE _0x4E
                 ; 0000 0134 row2 = filas[1];
00016a d207      	RCALL SUBOPT_0xE
00016b f411      	BRNE _0x4F
00016c 9891      	CBI  0x12,1
00016d c001      	RJMP _0x50
                 _0x4F:
00016e 9a91      	SBI  0x12,1
                 _0x50:
                 ; 0000 0135 row3 = filas[2];
00016f d206      	RCALL SUBOPT_0xF
000170 f411      	BRNE _0x51
000171 9892      	CBI  0x12,2
000172 c001      	RJMP _0x52
                 _0x51:
000173 9a92      	SBI  0x12,2
                 _0x52:
                 ; 0000 0136 row4 = filas[3];
000174 d205      	RCALL SUBOPT_0x10
000175 f411      	BRNE _0x53
000176 9893      	CBI  0x12,3
000177 c001      	RJMP _0x54
                 _0x53:
000178 9a93      	SBI  0x12,3
                 _0x54:
                 ; 0000 0137 row5 = filas[4];
000179 d204      	RCALL SUBOPT_0x11
00017a f411      	BRNE _0x55
00017b 9894      	CBI  0x12,4
00017c c001      	RJMP _0x56
                 _0x55:
00017d 9a94      	SBI  0x12,4
                 _0x56:
                 ; 0000 0138 row6 = filas[5];
00017e d203      	RCALL SUBOPT_0x12
00017f f411      	BRNE _0x57
000180 9895      	CBI  0x12,5
000181 c001      	RJMP _0x58
                 _0x57:
000182 9a95      	SBI  0x12,5
                 _0x58:
                 ; 0000 0139 delay_ms(200);
000183 d202      	RCALL SUBOPT_0x13
                 ; 0000 013A }
                 ; 0000 013B 
                 ; 0000 013C row1 = e1;
                 _0x4E:
000184 91e0 00e9 	LDS  R30,_e1
000186 30e0      	CPI  R30,0
000187 f411      	BRNE _0x59
000188 9890      	CBI  0x12,0
000189 c001      	RJMP _0x5A
                 _0x59:
00018a 9a90      	SBI  0x12,0
                 _0x5A:
                 ; 0000 013D row7 = e2;
00018b 91e0 00f3 	LDS  R30,_e2
00018d 30e0      	CPI  R30,0
00018e f411      	BRNE _0x5B
00018f 9896      	CBI  0x12,6
000190 c001      	RJMP _0x5C
                 _0x5B:
000191 9a96      	SBI  0x12,6
                 _0x5C:
                 ; 0000 013E 
                 ; 0000 013F delay_ms(100);
000192 d1d5      	RCALL SUBOPT_0xC
                 ; 0000 0140 
                 ; 0000 0141 }
000193 cf02      	RJMP _0x4
                 ; 0000 0142 }
                 _0x5D:
000194 cfff      	RJMP _0x5D
                 ; .FEND
                 ;void muevepunto(){
                 ; 0000 0145 void muevepunto(){
                 _muevepunto:
                 ; .FSTART _muevepunto
                 ; 0000 0146 ai = i;
000195 d1f2      	RCALL SUBOPT_0x14
000196 93e0 00fd 	STS  _ai,R30
000198 93f0 00fe 	STS  _ai+1,R31
                 ; 0000 0147 aj = j;
00019a 91e0 00fb 	LDS  R30,_j
00019c 91f0 00fc 	LDS  R31,_j+1
00019e d1ee      	RCALL SUBOPT_0x15
                 ; 0000 0148 
                 ; 0000 0149 i = i + factori;
00019f 91e0 0105 	LDS  R30,_factori
0001a1 91f0 0106 	LDS  R31,_factori+1
0001a3 d1ee      	RCALL SUBOPT_0x16
0001a4 0fea      	ADD  R30,R26
0001a5 1ffb      	ADC  R31,R27
0001a6 d1f0      	RCALL SUBOPT_0x17
                 ; 0000 014A j = j + factorj;
0001a7 91e0 0107 	LDS  R30,_factorj
0001a9 91f0 0108 	LDS  R31,_factorj+1
0001ab d1f0      	RCALL SUBOPT_0x18
0001ac 0fea      	ADD  R30,R26
0001ad 1ffb      	ADC  R31,R27
0001ae d195      	RCALL SUBOPT_0x5
                 ; 0000 014B 
                 ; 0000 014C //Rebotes solucion
                 ; 0000 014D if(i == 6){
0001af d1e2      	RCALL SUBOPT_0x16
0001b0 9716      	SBIW R26,6
0001b1 f5c9      	BRNE _0x5E
                 ; 0000 014E if((j==1&&a2==0)||(j==2&&b2==0)||(j==3&&c2==0)||(j==4&&d2==0)||(j==5&&e2==0)){
0001b2 d1e9      	RCALL SUBOPT_0x18
0001b3 9711      	SBIW R26,1
0001b4 f431      	BRNE _0x60
0001b5 91a0 00eb 	LDS  R26,_a2
0001b7 91b0 00ec 	LDS  R27,_a2+1
0001b9 9710      	SBIW R26,0
0001ba f129      	BREQ _0x62
                 _0x60:
0001bb d1e0      	RCALL SUBOPT_0x18
0001bc 9712      	SBIW R26,2
0001bd f431      	BRNE _0x63
0001be 91a0 00ed 	LDS  R26,_b2
0001c0 91b0 00ee 	LDS  R27,_b2+1
0001c2 9710      	SBIW R26,0
0001c3 f0e1      	BREQ _0x62
                 _0x63:
0001c4 d1d7      	RCALL SUBOPT_0x18
0001c5 9713      	SBIW R26,3
0001c6 f431      	BRNE _0x65
0001c7 91a0 00ef 	LDS  R26,_c2
0001c9 91b0 00f0 	LDS  R27,_c2+1
0001cb 9710      	SBIW R26,0
0001cc f099      	BREQ _0x62
                 _0x65:
0001cd d1ce      	RCALL SUBOPT_0x18
0001ce 9714      	SBIW R26,4
0001cf f431      	BRNE _0x67
0001d0 91a0 00f1 	LDS  R26,_d2
0001d2 91b0 00f2 	LDS  R27,_d2+1
0001d4 9710      	SBIW R26,0
0001d5 f051      	BREQ _0x62
                 _0x67:
0001d6 d1c5      	RCALL SUBOPT_0x18
0001d7 9715      	SBIW R26,5
0001d8 f431      	BRNE _0x69
0001d9 91a0 00f3 	LDS  R26,_e2
0001db 91b0 00f4 	LDS  R27,_e2+1
0001dd 9710      	SBIW R26,0
0001de f009      	BREQ _0x62
                 _0x69:
0001df c007      	RJMP _0x5F
                 _0x62:
                 ; 0000 014F factori = -1;
0001e0 efef      	LDI  R30,LOW(65535)
0001e1 efff      	LDI  R31,HIGH(65535)
0001e2 93e0 0105 	STS  _factori,R30
0001e4 93f0 0106 	STS  _factori+1,R31
                 ; 0000 0150 } else {
0001e6 c004      	RJMP _0x6C
                 _0x5F:
                 ; 0000 0151 puntuacionj1++;
0001e7 01f2      	MOVW R30,R4
0001e8 9631      	ADIW R30,1
0001e9 012f      	MOVW R4,R30
                 ; 0000 0152 i = 1;
0001ea d1b6      	RCALL SUBOPT_0x19
                 ; 0000 0153 j = 3;
                 ; 0000 0154 }
                 _0x6C:
                 ; 0000 0155 }
                 ; 0000 0156 
                 ; 0000 0157 //rebote izq a der
                 ; 0000 0158 if(j == 5){
                 _0x5E:
0001eb d1b0      	RCALL SUBOPT_0x18
0001ec 9715      	SBIW R26,5
0001ed f461      	BRNE _0x6D
                 ; 0000 0159 j = 5;
0001ee e0e5      	LDI  R30,LOW(5)
0001ef e0f0      	LDI  R31,HIGH(5)
0001f0 d153      	RCALL SUBOPT_0x5
                 ; 0000 015A aj = 5;
0001f1 e0e5      	LDI  R30,LOW(5)
0001f2 e0f0      	LDI  R31,HIGH(5)
0001f3 d199      	RCALL SUBOPT_0x15
                 ; 0000 015B factorj = -1;
0001f4 efef      	LDI  R30,LOW(65535)
0001f5 efff      	LDI  R31,HIGH(65535)
0001f6 93e0 0107 	STS  _factorj,R30
0001f8 93f0 0108 	STS  _factorj+1,R31
                 ; 0000 015C }
                 ; 0000 015D 
                 ; 0000 015E //rebote der a izq
                 ; 0000 015F if(j == 1){
                 _0x6D:
0001fa d1a1      	RCALL SUBOPT_0x18
0001fb 9711      	SBIW R26,1
0001fc f429      	BRNE _0x6E
                 ; 0000 0160 j = 1;
0001fd d138      	RCALL SUBOPT_0x2
0001fe d145      	RCALL SUBOPT_0x5
                 ; 0000 0161 aj = 1;
0001ff d136      	RCALL SUBOPT_0x2
000200 d18c      	RCALL SUBOPT_0x15
                 ; 0000 0162 factorj = 1;
000201 d153      	RCALL SUBOPT_0x8
                 ; 0000 0163 }
                 ; 0000 0164 
                 ; 0000 0165 if(i == 0){
                 _0x6E:
000202 d185      	RCALL SUBOPT_0x14
000203 9730      	SBIW R30,0
000204 f579      	BRNE _0x6F
                 ; 0000 0166 if((j==1&&a1==0)||(j==2&&b1==0)||(j==3&&c1==0)||(j==4&&d1==0)||(j==5&&e1==0)){
000205 d196      	RCALL SUBOPT_0x18
000206 9711      	SBIW R26,1
000207 f421      	BRNE _0x71
000208 2400      	CLR  R0
000209 1408      	CP   R0,R8
00020a 0409      	CPC  R0,R9
00020b f109      	BREQ _0x73
                 _0x71:
00020c d18f      	RCALL SUBOPT_0x18
00020d 9712      	SBIW R26,2
00020e f421      	BRNE _0x74
00020f 2400      	CLR  R0
000210 140a      	CP   R0,R10
000211 040b      	CPC  R0,R11
000212 f0d1      	BREQ _0x73
                 _0x74:
000213 d188      	RCALL SUBOPT_0x18
000214 9713      	SBIW R26,3
000215 f421      	BRNE _0x76
000216 2400      	CLR  R0
000217 140c      	CP   R0,R12
000218 040d      	CPC  R0,R13
000219 f099      	BREQ _0x73
                 _0x76:
00021a d181      	RCALL SUBOPT_0x18
00021b 9714      	SBIW R26,4
00021c f431      	BRNE _0x78
00021d 91a0 00e7 	LDS  R26,_d1
00021f 91b0 00e8 	LDS  R27,_d1+1
000221 9710      	SBIW R26,0
000222 f051      	BREQ _0x73
                 _0x78:
000223 d178      	RCALL SUBOPT_0x18
000224 9715      	SBIW R26,5
000225 f431      	BRNE _0x7A
000226 91a0 00e9 	LDS  R26,_e1
000228 91b0 00ea 	LDS  R27,_e1+1
00022a 9710      	SBIW R26,0
00022b f009      	BREQ _0x73
                 _0x7A:
00022c c002      	RJMP _0x70
                 _0x73:
                 ; 0000 0167 factori = 1;
00022d d121      	RCALL SUBOPT_0x7
                 ; 0000 0168 } else {
00022e c005      	RJMP _0x7D
                 _0x70:
                 ; 0000 0169 puntuacionj2++;
00022f 01f3      	MOVW R30,R6
000230 9631      	ADIW R30,1
000231 013f      	MOVW R6,R30
000232 9731      	SBIW R30,1
                 ; 0000 016A i = 1;
000233 d16d      	RCALL SUBOPT_0x19
                 ; 0000 016B j = 3;
                 ; 0000 016C }
                 _0x7D:
                 ; 0000 016D }
                 ; 0000 016E filas[i] = 0;
                 _0x6F:
000234 d153      	RCALL SUBOPT_0x14
000235 52e0      	SUBI R30,LOW(-_filas)
000236 4fff      	SBCI R31,HIGH(-_filas)
000237 e0a0      	LDI  R26,LOW(0)
000238 83a0      	STD  Z+0,R26
                 ; 0000 016F filas[ai] = 1;
000239 91e0 00fd 	LDS  R30,_ai
00023b 91f0 00fe 	LDS  R31,_ai+1
00023d 52e0      	SUBI R30,LOW(-_filas)
00023e 4fff      	SBCI R31,HIGH(-_filas)
00023f e0a1      	LDI  R26,LOW(1)
000240 83a0      	STD  Z+0,R26
                 ; 0000 0170 }
000241 9508      	RET
                 ; .FEND
                 ;void muevej1der(){
                 ; 0000 0172 void muevej1der(){
                 _muevej1der:
                 ; .FSTART _muevej1der
                 ; 0000 0173 if(derj1 == 0){
000242 99b1      	SBIC 0x16,1
000243 c002      	RJMP _0x7E
                 ; 0000 0174 botonadj1 = 0;
000244 94e8      	CLT
000245 c001      	RJMP _0xB2
                 ; 0000 0175 } else {
                 _0x7E:
                 ; 0000 0176 botonadj1 = 1;
000246 9468      	SET
                 _0xB2:
000247 f821      	BLD  R2,1
                 ; 0000 0177 }
                 ; 0000 0178 
                 ; 0000 0179 if((botonpdj1 == 1)&& (botonadj1 == 0)){//Cambio de flanco de 1 a 0
000248 fe20      	SBRS R2,0
000249 c002      	RJMP _0x81
00024a fe21      	SBRS R2,1
00024b c001      	RJMP _0x82
                 _0x81:
00024c c01f      	RJMP _0x80
                 _0x82:
                 ; 0000 017A xj1++;
00024d efa5      	LDI  R26,LOW(_xj1)
00024e e0b0      	LDI  R27,HIGH(_xj1)
00024f d10b      	RCALL SUBOPT_0x9
                 ; 0000 017B if(xj1 > 4){
000250 d155      	RCALL SUBOPT_0x1A
000251 9715      	SBIW R26,5
000252 f01c      	BRLT _0x83
                 ; 0000 017C xj1 = 4;
000253 e0e4      	LDI  R30,LOW(4)
000254 e0f0      	LDI  R31,HIGH(4)
000255 d0e3      	RCALL SUBOPT_0x3
                 ; 0000 017D }
                 ; 0000 017E if(xj1 == 1){
                 _0x83:
000256 d14f      	RCALL SUBOPT_0x1A
000257 9711      	SBIW R26,1
000258 f409      	BRNE _0x84
                 ; 0000 017F a1 = 0;
000259 d0b4      	RCALL SUBOPT_0x0
                 ; 0000 0180 b1 = 0;
                 ; 0000 0181 c1 = 1;
                 ; 0000 0182 d1 = 1;
                 ; 0000 0183 e1 = 1;
                 ; 0000 0184 }
                 ; 0000 0185 if(xj1 == 2){
                 _0x84:
00025a d14b      	RCALL SUBOPT_0x1A
00025b 9712      	SBIW R26,2
00025c f411      	BRNE _0x85
                 ; 0000 0186 a1 = 1;
00025d d14d      	RCALL SUBOPT_0x1B
                 ; 0000 0187 b1 = 0;
00025e d14f      	RCALL SUBOPT_0x1C
                 ; 0000 0188 c1 = 0;
                 ; 0000 0189 d1 = 1;
                 ; 0000 018A e1 = 1;
                 ; 0000 018B }
                 ; 0000 018C if(xj1 == 3){
                 _0x85:
00025f d146      	RCALL SUBOPT_0x1A
000260 9713      	SBIW R26,3
000261 f419      	BRNE _0x86
                 ; 0000 018D a1 = 1;
000262 d148      	RCALL SUBOPT_0x1B
                 ; 0000 018E b1 = 1;
000263 d159      	RCALL SUBOPT_0x1D
                 ; 0000 018F c1 = 0;
000264 d15b      	RCALL SUBOPT_0x1E
                 ; 0000 0190 d1 = 0;
                 ; 0000 0191 e1 = 1;
                 ; 0000 0192 }
                 ; 0000 0193 if(xj1 == 4){
                 _0x86:
000265 d140      	RCALL SUBOPT_0x1A
000266 9714      	SBIW R26,4
000267 f419      	BRNE _0x87
                 ; 0000 0194 a1 = 1;
000268 d142      	RCALL SUBOPT_0x1B
                 ; 0000 0195 b1 = 1;
000269 d153      	RCALL SUBOPT_0x1D
                 ; 0000 0196 c1 = 1;
00026a d162      	RCALL SUBOPT_0x1F
                 ; 0000 0197 d1 = 0;
                 ; 0000 0198 e1 = 0;
                 ; 0000 0199 }
                 ; 0000 019A delay_ms(40);
                 _0x87:
00026b d16d      	RCALL SUBOPT_0x20
                 ; 0000 019B }
                 ; 0000 019C 
                 ; 0000 019D if((botonpdj1 == 0) &&(botonadj1 == 1)){
                 _0x80:
00026c fc20      	SBRC R2,0
00026d c002      	RJMP _0x89
00026e fc21      	SBRC R2,1
00026f c001      	RJMP _0x8A
                 _0x89:
000270 c003      	RJMP _0x88
                 _0x8A:
                 ; 0000 019E delay_ms(40);
000271 d167      	RCALL SUBOPT_0x20
                 ; 0000 019F botonpdj1 = botonadj1;
000272 fa21      	BST  R2,1
000273 f820      	BLD  R2,0
                 ; 0000 01A0 }
                 ; 0000 01A1 }
                 _0x88:
000274 9508      	RET
                 ; .FEND
                 ;void muevej1izq(){
                 ; 0000 01A3 void muevej1izq(){
                 _muevej1izq:
                 ; .FSTART _muevej1izq
                 ; 0000 01A4 if(izqj1 == 0){
000275 99b0      	SBIC 0x16,0
000276 c002      	RJMP _0x8B
                 ; 0000 01A5 botonaij1 = 0;
000277 94e8      	CLT
000278 c001      	RJMP _0xB3
                 ; 0000 01A6 } else {
                 _0x8B:
                 ; 0000 01A7 botonaij1 = 1;
000279 9468      	SET
                 _0xB3:
00027a f825      	BLD  R2,5
                 ; 0000 01A8 }
                 ; 0000 01A9 
                 ; 0000 01AA if((botonpij1 == 1)&& (botonaij1 == 0)){//Cambio de flanco de 1 a 0
00027b fe24      	SBRS R2,4
00027c c002      	RJMP _0x8E
00027d fe25      	SBRS R2,5
00027e c001      	RJMP _0x8F
                 _0x8E:
00027f c01e      	RJMP _0x8D
                 _0x8F:
                 ; 0000 01AB xj1--;
000280 efa5      	LDI  R26,LOW(_xj1)
000281 e0b0      	LDI  R27,HIGH(_xj1)
000282 d158      	RCALL SUBOPT_0x21
                 ; 0000 01AC if(xj1 < 1){
000283 d122      	RCALL SUBOPT_0x1A
000284 9711      	SBIW R26,1
000285 f414      	BRGE _0x90
                 ; 0000 01AD xj1 = 1;
000286 d0af      	RCALL SUBOPT_0x2
000287 d0b1      	RCALL SUBOPT_0x3
                 ; 0000 01AE }
                 ; 0000 01AF if(xj1 == 1){
                 _0x90:
000288 d11d      	RCALL SUBOPT_0x1A
000289 9711      	SBIW R26,1
00028a f409      	BRNE _0x91
                 ; 0000 01B0 a1 = 0;
00028b d082      	RCALL SUBOPT_0x0
                 ; 0000 01B1 b1 = 0;
                 ; 0000 01B2 c1 = 1;
                 ; 0000 01B3 d1 = 1;
                 ; 0000 01B4 e1 = 1;
                 ; 0000 01B5 }
                 ; 0000 01B6 if(xj1 == 2){
                 _0x91:
00028c d119      	RCALL SUBOPT_0x1A
00028d 9712      	SBIW R26,2
00028e f411      	BRNE _0x92
                 ; 0000 01B7 a1 = 1;
00028f d11b      	RCALL SUBOPT_0x1B
                 ; 0000 01B8 b1 = 0;
000290 d11d      	RCALL SUBOPT_0x1C
                 ; 0000 01B9 c1 = 0;
                 ; 0000 01BA d1 = 1;
                 ; 0000 01BB e1 = 1;
                 ; 0000 01BC }
                 ; 0000 01BD if(xj1 == 3){
                 _0x92:
000291 d114      	RCALL SUBOPT_0x1A
000292 9713      	SBIW R26,3
000293 f419      	BRNE _0x93
                 ; 0000 01BE a1 = 1;
000294 d116      	RCALL SUBOPT_0x1B
                 ; 0000 01BF b1 = 1;
000295 d127      	RCALL SUBOPT_0x1D
                 ; 0000 01C0 c1 = 0;
000296 d129      	RCALL SUBOPT_0x1E
                 ; 0000 01C1 d1 = 0;
                 ; 0000 01C2 e1 = 1;
                 ; 0000 01C3 }
                 ; 0000 01C4 if(xj1 == 4){
                 _0x93:
000297 d10e      	RCALL SUBOPT_0x1A
000298 9714      	SBIW R26,4
000299 f419      	BRNE _0x94
                 ; 0000 01C5 a1 = 1;
00029a d110      	RCALL SUBOPT_0x1B
                 ; 0000 01C6 b1 = 1;
00029b d121      	RCALL SUBOPT_0x1D
                 ; 0000 01C7 c1 = 1;
00029c d130      	RCALL SUBOPT_0x1F
                 ; 0000 01C8 d1 = 0;
                 ; 0000 01C9 e1 = 0;
                 ; 0000 01CA }
                 ; 0000 01CB delay_ms(40);
                 _0x94:
00029d d13b      	RCALL SUBOPT_0x20
                 ; 0000 01CC }
                 ; 0000 01CD 
                 ; 0000 01CE if((botonpij1 == 0) &&(botonaij1 == 1)){
                 _0x8D:
00029e fc24      	SBRC R2,4
00029f c002      	RJMP _0x96
0002a0 fc25      	SBRC R2,5
0002a1 c001      	RJMP _0x97
                 _0x96:
0002a2 c003      	RJMP _0x95
                 _0x97:
                 ; 0000 01CF delay_ms(40);
0002a3 d135      	RCALL SUBOPT_0x20
                 ; 0000 01D0 botonpij1 = botonaij1;
0002a4 fa25      	BST  R2,5
0002a5 f824      	BLD  R2,4
                 ; 0000 01D1 }
                 ; 0000 01D2 }
                 _0x95:
0002a6 9508      	RET
                 ; .FEND
                 ;void muevej2der(){
                 ; 0000 01D5 void muevej2der(){
                 _muevej2der:
                 ; .FSTART _muevej2der
                 ; 0000 01D6 if(derj2 == 0){
0002a7 99b3      	SBIC 0x16,3
0002a8 c002      	RJMP _0x98
                 ; 0000 01D7 botonadj2 = 0;
0002a9 94e8      	CLT
0002aa c001      	RJMP _0xB4
                 ; 0000 01D8 } else {
                 _0x98:
                 ; 0000 01D9 botonadj2 = 1;
0002ab 9468      	SET
                 _0xB4:
0002ac f823      	BLD  R2,3
                 ; 0000 01DA }
                 ; 0000 01DB 
                 ; 0000 01DC if((botonpdj2 == 1)&& (botonadj2 == 0)){//Cambio de flanco de 1 a 0
0002ad fe22      	SBRS R2,2
0002ae c002      	RJMP _0x9B
0002af fe23      	SBRS R2,3
0002b0 c001      	RJMP _0x9C
                 _0x9B:
0002b1 c022      	RJMP _0x9A
                 _0x9C:
                 ; 0000 01DD xj2++;
0002b2 efa7      	LDI  R26,LOW(_xj2)
0002b3 e0b0      	LDI  R27,HIGH(_xj2)
0002b4 d0a6      	RCALL SUBOPT_0x9
                 ; 0000 01DE if(xj2 > 4){
0002b5 d12b      	RCALL SUBOPT_0x22
0002b6 9715      	SBIW R26,5
0002b7 f034      	BRLT _0x9D
                 ; 0000 01DF xj2 = 4;
0002b8 e0e4      	LDI  R30,LOW(4)
0002b9 e0f0      	LDI  R31,HIGH(4)
0002ba 93e0 00f7 	STS  _xj2,R30
0002bc 93f0 00f8 	STS  _xj2+1,R31
                 ; 0000 01E0 }
                 ; 0000 01E1 if(xj2 == 1){
                 _0x9D:
0002be d122      	RCALL SUBOPT_0x22
0002bf 9711      	SBIW R26,1
0002c0 f409      	BRNE _0x9E
                 ; 0000 01E2 a2 = 0;
0002c1 d05c      	RCALL SUBOPT_0x1
                 ; 0000 01E3 b2 = 0;
                 ; 0000 01E4 c2 = 1;
                 ; 0000 01E5 d2 = 1;
                 ; 0000 01E6 e2 = 1;
                 ; 0000 01E7 }
                 ; 0000 01E8 if(xj2 == 2){
                 _0x9E:
0002c2 d11e      	RCALL SUBOPT_0x22
0002c3 9712      	SBIW R26,2
0002c4 f411      	BRNE _0x9F
                 ; 0000 01E9 a2 = 1;
0002c5 d120      	RCALL SUBOPT_0x23
                 ; 0000 01EA b2 = 0;
0002c6 d125      	RCALL SUBOPT_0x24
                 ; 0000 01EB c2 = 0;
                 ; 0000 01EC d2 = 1;
                 ; 0000 01ED e2 = 1;
                 ; 0000 01EE }
                 ; 0000 01EF if(xj2 == 3){
                 _0x9F:
0002c7 d119      	RCALL SUBOPT_0x22
0002c8 9713      	SBIW R26,3
0002c9 f419      	BRNE _0xA0
                 ; 0000 01F0 a2 = 1;
0002ca d11b      	RCALL SUBOPT_0x23
                 ; 0000 01F1 b2 = 1;
0002cb d134      	RCALL SUBOPT_0x25
                 ; 0000 01F2 c2 = 0;
0002cc d139      	RCALL SUBOPT_0x26
                 ; 0000 01F3 d2 = 0;
                 ; 0000 01F4 e2 = 1;
                 ; 0000 01F5 }
                 ; 0000 01F6 if(xj2 == 4){
                 _0xA0:
0002cd d113      	RCALL SUBOPT_0x22
0002ce 9714      	SBIW R26,4
0002cf f419      	BRNE _0xA1
                 ; 0000 01F7 a2 = 1;
0002d0 d115      	RCALL SUBOPT_0x23
                 ; 0000 01F8 b2 = 1;
0002d1 d12e      	RCALL SUBOPT_0x25
                 ; 0000 01F9 c2 = 1;
0002d2 d142      	RCALL SUBOPT_0x27
                 ; 0000 01FA d2 = 0;
                 ; 0000 01FB e2 = 0;
                 ; 0000 01FC }
                 ; 0000 01FD delay_ms(40);
                 _0xA1:
0002d3 d105      	RCALL SUBOPT_0x20
                 ; 0000 01FE }
                 ; 0000 01FF 
                 ; 0000 0200 if((botonpdj2 == 0) &&(botonadj2 == 1)){
                 _0x9A:
0002d4 fc22      	SBRC R2,2
0002d5 c002      	RJMP _0xA3
0002d6 fc23      	SBRC R2,3
0002d7 c001      	RJMP _0xA4
                 _0xA3:
0002d8 c003      	RJMP _0xA2
                 _0xA4:
                 ; 0000 0201 delay_ms(40);
0002d9 d0ff      	RCALL SUBOPT_0x20
                 ; 0000 0202 botonpdj2 = botonadj2;
0002da fa23      	BST  R2,3
0002db f822      	BLD  R2,2
                 ; 0000 0203 }
                 ; 0000 0204 }
                 _0xA2:
0002dc 9508      	RET
                 ; .FEND
                 ;void muevej2izq(){
                 ; 0000 0206 void muevej2izq(){
                 _muevej2izq:
                 ; .FSTART _muevej2izq
                 ; 0000 0207 if(izqj2 == 0){
0002dd 99b2      	SBIC 0x16,2
0002de c002      	RJMP _0xA5
                 ; 0000 0208 botonaij2 = 0;
0002df 94e8      	CLT
0002e0 c001      	RJMP _0xB5
                 ; 0000 0209 } else {
                 _0xA5:
                 ; 0000 020A botonaij2 = 1;
0002e1 9468      	SET
                 _0xB5:
0002e2 f827      	BLD  R2,7
                 ; 0000 020B }
                 ; 0000 020C 
                 ; 0000 020D if((botonpij2 == 1)&& (botonaij2 == 0)){//Cambio de flanco de 1 a 0
0002e3 fe26      	SBRS R2,6
0002e4 c002      	RJMP _0xA8
0002e5 fe27      	SBRS R2,7
0002e6 c001      	RJMP _0xA9
                 _0xA8:
0002e7 c01d      	RJMP _0xA7
                 _0xA9:
                 ; 0000 020E xj2--;
0002e8 efa7      	LDI  R26,LOW(_xj2)
0002e9 e0b0      	LDI  R27,HIGH(_xj2)
0002ea d0f0      	RCALL SUBOPT_0x21
                 ; 0000 020F if(xj2 < 1){
0002eb d0f5      	RCALL SUBOPT_0x22
0002ec 9711      	SBIW R26,1
0002ed f40c      	BRGE _0xAA
                 ; 0000 0210 xj2 = 1;
0002ee d04f      	RCALL SUBOPT_0x4
                 ; 0000 0211 }
                 ; 0000 0212 if(xj2 == 1){
                 _0xAA:
0002ef d0f1      	RCALL SUBOPT_0x22
0002f0 9711      	SBIW R26,1
0002f1 f409      	BRNE _0xAB
                 ; 0000 0213 a2 = 0;
0002f2 d02b      	RCALL SUBOPT_0x1
                 ; 0000 0214 b2 = 0;
                 ; 0000 0215 c2 = 1;
                 ; 0000 0216 d2 = 1;
                 ; 0000 0217 e2 = 1;
                 ; 0000 0218 }
                 ; 0000 0219 if(xj2 == 2){
                 _0xAB:
0002f3 d0ed      	RCALL SUBOPT_0x22
0002f4 9712      	SBIW R26,2
0002f5 f411      	BRNE _0xAC
                 ; 0000 021A a2 = 1;
0002f6 d0ef      	RCALL SUBOPT_0x23
                 ; 0000 021B b2 = 0;
0002f7 d0f4      	RCALL SUBOPT_0x24
                 ; 0000 021C c2 = 0;
                 ; 0000 021D d2 = 1;
                 ; 0000 021E e2 = 1;
                 ; 0000 021F }
                 ; 0000 0220 if(xj2 == 3){
                 _0xAC:
0002f8 d0e8      	RCALL SUBOPT_0x22
0002f9 9713      	SBIW R26,3
0002fa f419      	BRNE _0xAD
                 ; 0000 0221 a2 = 1;
0002fb d0ea      	RCALL SUBOPT_0x23
                 ; 0000 0222 b2 = 1;
0002fc d103      	RCALL SUBOPT_0x25
                 ; 0000 0223 c2 = 0;
0002fd d108      	RCALL SUBOPT_0x26
                 ; 0000 0224 d2 = 0;
                 ; 0000 0225 e2 = 1;
                 ; 0000 0226 }
                 ; 0000 0227 if(xj2 == 4){
                 _0xAD:
0002fe d0e2      	RCALL SUBOPT_0x22
0002ff 9714      	SBIW R26,4
000300 f419      	BRNE _0xAE
                 ; 0000 0228 a2 = 1;
000301 d0e4      	RCALL SUBOPT_0x23
                 ; 0000 0229 b2 = 1;
000302 d0fd      	RCALL SUBOPT_0x25
                 ; 0000 022A c2 = 1;
000303 d111      	RCALL SUBOPT_0x27
                 ; 0000 022B d2 = 0;
                 ; 0000 022C e2 = 0;
                 ; 0000 022D }
                 ; 0000 022E delay_ms(40);
                 _0xAE:
000304 d0d4      	RCALL SUBOPT_0x20
                 ; 0000 022F }
                 ; 0000 0230 
                 ; 0000 0231 if((botonpij2 == 0) &&(botonaij2 == 1)){
                 _0xA7:
000305 fc26      	SBRC R2,6
000306 c002      	RJMP _0xB0
000307 fc27      	SBRC R2,7
000308 c001      	RJMP _0xB1
                 _0xB0:
000309 c003      	RJMP _0xAF
                 _0xB1:
                 ; 0000 0232 delay_ms(40);
00030a d0ce      	RCALL SUBOPT_0x20
                 ; 0000 0233 botonpij2 = botonaij2;
00030b fa27      	BST  R2,7
00030c f826      	BLD  R2,6
                 ; 0000 0234 }
                 ; 0000 0235 }
                 _0xAF:
00030d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _filas:
0000e0           	.BYTE 0x7
                 _d1:
0000e7           	.BYTE 0x2
                 _e1:
0000e9           	.BYTE 0x2
                 _a2:
0000eb           	.BYTE 0x2
                 _b2:
0000ed           	.BYTE 0x2
                 _c2:
0000ef           	.BYTE 0x2
                 _d2:
0000f1           	.BYTE 0x2
                 _e2:
0000f3           	.BYTE 0x2
                 _xj1:
0000f5           	.BYTE 0x2
                 _xj2:
0000f7           	.BYTE 0x2
                 _i:
0000f9           	.BYTE 0x2
                 _j:
0000fb           	.BYTE 0x2
                 _ai:
0000fd           	.BYTE 0x2
                 _aj:
0000ff           	.BYTE 0x2
                 _x:
000101           	.BYTE 0x2
                 _iterador:
000103           	.BYTE 0x2
                 _factori:
000105           	.BYTE 0x2
                 _factorj:
000107           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x0:
00030e 2488      	CLR  R8
00030f 2499      	CLR  R9
000310 24aa      	CLR  R10
000311 24bb      	CLR  R11
000312 e0e1      	LDI  R30,LOW(1)
000313 e0f0      	LDI  R31,HIGH(1)
000314 016f      	MOVW R12,R30
000315 93e0 00e7 	STS  _d1,R30
000317 93f0 00e8 	STS  _d1+1,R31
000319 93e0 00e9 	STS  _e1,R30
00031b 93f0 00ea 	STS  _e1+1,R31
00031d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x1:
00031e e0e0      	LDI  R30,LOW(0)
00031f 93e0 00eb 	STS  _a2,R30
000321 93e0 00ec 	STS  _a2+1,R30
000323 93e0 00ed 	STS  _b2,R30
000325 93e0 00ee 	STS  _b2+1,R30
000327 e0e1      	LDI  R30,LOW(1)
000328 e0f0      	LDI  R31,HIGH(1)
000329 93e0 00ef 	STS  _c2,R30
00032b 93f0 00f0 	STS  _c2+1,R31
00032d 93e0 00f1 	STS  _d2,R30
00032f 93f0 00f2 	STS  _d2+1,R31
000331 93e0 00f3 	STS  _e2,R30
000333 93f0 00f4 	STS  _e2+1,R31
000335 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 48 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2:
000336 e0e1      	LDI  R30,LOW(1)
000337 e0f0      	LDI  R31,HIGH(1)
000338 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
000339 93e0 00f5 	STS  _xj1,R30
00033b 93f0 00f6 	STS  _xj1+1,R31
00033d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
00033e dff7      	RCALL SUBOPT_0x2
00033f 93e0 00f7 	STS  _xj2,R30
000341 93f0 00f8 	STS  _xj2+1,R31
000343 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
000344 93e0 00fb 	STS  _j,R30
000346 93f0 00fc 	STS  _j+1,R31
000348 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000349 e0e0      	LDI  R30,LOW(0)
00034a 93e0 0103 	STS  _iterador,R30
00034c 93e0 0104 	STS  _iterador+1,R30
00034e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
00034f dfe6      	RCALL SUBOPT_0x2
000350 93e0 0105 	STS  _factori,R30
000352 93f0 0106 	STS  _factori+1,R31
000354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000355 dfe0      	RCALL SUBOPT_0x2
000356 93e0 0107 	STS  _factorj,R30
000358 93f0 0108 	STS  _factorj+1,R31
00035a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
00035b 91ed      	LD   R30,X+
00035c 91fd      	LD   R31,X+
00035d 9631      	ADIW R30,1
00035e 93fe      	ST   -X,R31
00035f 93ee      	ST   -X,R30
000360 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000361 5de6      	SUBI R30,LOW(-_tabla7segmentos*2)
000362 4fff      	SBCI R31,HIGH(-_tabla7segmentos*2)
000363 9004      	LPM  R0,Z
000364 ba0b      	OUT  0x1B,R0
000365 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xB:
000366 e0b0      	LDI  R27,0
000367 c0bc      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000368 e6a4      	LDI  R26,LOW(100)
000369 cffc      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xD:
00036a bbe5      	OUT  0x15,R30
00036b efef      	LDI  R30,LOW(255)
00036c bbe2      	OUT  0x12,R30
00036d 91a0 00fb 	LDS  R26,_j
00036f 91b0 00fc 	LDS  R27,_j+1
000371 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xE:
                +
000372 91e0 00e1+LDS R30 , _filas + ( 1 )
                 	__GETB1MN _filas,1
000374 30e0      	CPI  R30,0
000375 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xF:
                +
000376 91e0 00e2+LDS R30 , _filas + ( 2 )
                 	__GETB1MN _filas,2
000378 30e0      	CPI  R30,0
000379 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10:
                +
00037a 91e0 00e3+LDS R30 , _filas + ( 3 )
                 	__GETB1MN _filas,3
00037c 30e0      	CPI  R30,0
00037d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
                +
00037e 91e0 00e4+LDS R30 , _filas + ( 4 )
                 	__GETB1MN _filas,4
000380 30e0      	CPI  R30,0
000381 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
                +
000382 91e0 00e5+LDS R30 , _filas + ( 5 )
                 	__GETB1MN _filas,5
000384 30e0      	CPI  R30,0
000385 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000386 eca8      	LDI  R26,LOW(200)
000387 cfde      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x14:
000388 91e0 00f9 	LDS  R30,_i
00038a 91f0 00fa 	LDS  R31,_i+1
00038c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
00038d 93e0 00ff 	STS  _aj,R30
00038f 93f0 0100 	STS  _aj+1,R31
000391 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
000392 91a0 00f9 	LDS  R26,_i
000394 91b0 00fa 	LDS  R27,_i+1
000396 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x17:
000397 93e0 00f9 	STS  _i,R30
000399 93f0 00fa 	STS  _i+1,R31
00039b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x18:
00039c 91a0 00fb 	LDS  R26,_j
00039e 91b0 00fc 	LDS  R27,_j+1
0003a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x19:
0003a1 df94      	RCALL SUBOPT_0x2
0003a2 dff4      	RCALL SUBOPT_0x17
0003a3 e0e3      	LDI  R30,LOW(3)
0003a4 e0f0      	LDI  R31,HIGH(3)
0003a5 cf9e      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1A:
0003a6 91a0 00f5 	LDS  R26,_xj1
0003a8 91b0 00f6 	LDS  R27,_xj1+1
0003aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
0003ab df8a      	RCALL SUBOPT_0x2
0003ac 014f      	MOVW R8,R30
0003ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1C:
0003ae 24aa      	CLR  R10
0003af 24bb      	CLR  R11
0003b0 24cc      	CLR  R12
0003b1 24dd      	CLR  R13
0003b2 df83      	RCALL SUBOPT_0x2
0003b3 93e0 00e7 	STS  _d1,R30
0003b5 93f0 00e8 	STS  _d1+1,R31
0003b7 df7e      	RCALL SUBOPT_0x2
0003b8 93e0 00e9 	STS  _e1,R30
0003ba 93f0 00ea 	STS  _e1+1,R31
0003bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
0003bd df78      	RCALL SUBOPT_0x2
0003be 015f      	MOVW R10,R30
0003bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E:
0003c0 24cc      	CLR  R12
0003c1 24dd      	CLR  R13
0003c2 e0e0      	LDI  R30,LOW(0)
0003c3 93e0 00e7 	STS  _d1,R30
0003c5 93e0 00e8 	STS  _d1+1,R30
0003c7 df6e      	RCALL SUBOPT_0x2
0003c8 93e0 00e9 	STS  _e1,R30
0003ca 93f0 00ea 	STS  _e1+1,R31
0003cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1F:
0003cd df68      	RCALL SUBOPT_0x2
0003ce 016f      	MOVW R12,R30
0003cf e0e0      	LDI  R30,LOW(0)
0003d0 93e0 00e7 	STS  _d1,R30
0003d2 93e0 00e8 	STS  _d1+1,R30
0003d4 93e0 00e9 	STS  _e1,R30
0003d6 93e0 00ea 	STS  _e1+1,R30
0003d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
0003d9 e2a8      	LDI  R26,LOW(40)
0003da cf8b      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x21:
0003db 91ed      	LD   R30,X+
0003dc 91fd      	LD   R31,X+
0003dd 9731      	SBIW R30,1
0003de 93fe      	ST   -X,R31
0003df 93ee      	ST   -X,R30
0003e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x22:
0003e1 91a0 00f7 	LDS  R26,_xj2
0003e3 91b0 00f8 	LDS  R27,_xj2+1
0003e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x23:
0003e6 df4f      	RCALL SUBOPT_0x2
0003e7 93e0 00eb 	STS  _a2,R30
0003e9 93f0 00ec 	STS  _a2+1,R31
0003eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x24:
0003ec e0e0      	LDI  R30,LOW(0)
0003ed 93e0 00ed 	STS  _b2,R30
0003ef 93e0 00ee 	STS  _b2+1,R30
0003f1 93e0 00ef 	STS  _c2,R30
0003f3 93e0 00f0 	STS  _c2+1,R30
0003f5 df40      	RCALL SUBOPT_0x2
0003f6 93e0 00f1 	STS  _d2,R30
0003f8 93f0 00f2 	STS  _d2+1,R31
0003fa df3b      	RCALL SUBOPT_0x2
0003fb 93e0 00f3 	STS  _e2,R30
0003fd 93f0 00f4 	STS  _e2+1,R31
0003ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x25:
000400 df35      	RCALL SUBOPT_0x2
000401 93e0 00ed 	STS  _b2,R30
000403 93f0 00ee 	STS  _b2+1,R31
000405 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x26:
000406 e0e0      	LDI  R30,LOW(0)
000407 93e0 00ef 	STS  _c2,R30
000409 93e0 00f0 	STS  _c2+1,R30
00040b 93e0 00f1 	STS  _d2,R30
00040d 93e0 00f2 	STS  _d2+1,R30
00040f df26      	RCALL SUBOPT_0x2
000410 93e0 00f3 	STS  _e2,R30
000412 93f0 00f4 	STS  _e2+1,R31
000414 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x27:
000415 df20      	RCALL SUBOPT_0x2
000416 93e0 00ef 	STS  _c2,R30
000418 93f0 00f0 	STS  _c2+1,R31
00041a e0e0      	LDI  R30,LOW(0)
00041b 93e0 00f1 	STS  _d2,R30
00041d 93e0 00f2 	STS  _d2+1,R30
00041f 93e0 00f3 	STS  _e2,R30
000421 93e0 00f4 	STS  _e2+1,R30
000423 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 _delay_ms:
000424 9610      	adiw r26,0
000425 f039      	breq __delay_ms1
                 __delay_ms0:
000426 95a8      	wdr
                +
000427 ef8a     +LDI R24 , LOW ( 0xFA )
000428 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000429 9701     +SBIW R24 , 1
00042a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00042b 9711      	sbiw r26,1
00042c f7c9      	brne __delay_ms0
                 __delay_ms1:
00042d 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8535 register use summary:
r0 :  15 r1 :   1 r2 :  28 r3 :   0 r4 :   4 r5 :   1 r6 :   4 r7 :   1 
r8 :   4 r9 :   2 r10:   5 r11:   3 r12:   6 r13:   3 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:   9 r25:   3 r26:  80 r27:  24 r28:   1 r29:   1 r30: 200 r31:  53 
x  :  11 y  :   0 z  :  10 
Registers used: 24 out of 35 (68.6%)

ATmega8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   2 
adiw  :   4 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   8 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  12 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   2 brmi  :   0 brne  :  75 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   4 cbi   :  37 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :  19 
cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :   0 cp    :   3 
cpc   :   4 cpi   :  16 cpse  :   0 dec   :   1 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 
inc   :   0 ld    :   4 ldd   :   0 ldi   :  79 lds   :  48 lpm   :   9 
lsl   :   0 lsr   :   0 mov   :   3 movw  :  13 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :  43 
pop   :   0 push  :   0 rcall : 181 ret   :  41 reti  :   0 rjmp  : 102 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   3 sbi   :  37 sbic  :   4 
sbis  :   0 sbiw  :  53 sbr   :   0 sbrc  :   8 sbrs  :   8 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   4 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   7 std   :   2 
sts   :  78 sub   :   0 subi  :   3 swap  :   0 tst   :   0 wdr   :   1 

Instructions used: 39 out of 114 (34.2%)

ATmega8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00085c   2106     34   2140    8192  26.1%
[.dseg] 0x000060 0x000109      0     41     41     512   8.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 11 warnings
